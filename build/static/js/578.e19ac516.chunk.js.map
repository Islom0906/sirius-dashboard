{"version":3,"file":"static/js/578.e19ac516.chunk.js","mappings":"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","sources":["pages/sample/Index-category/IndexCategoryTable.jsx","pages/sample/Index-category/index.jsx"],"sourcesContent":["import {Button, Space, Table, Image, Popconfirm} from \"antd\";\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst IndexCategoryTable = ({data,deleteHandle}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n\n\n    const Delete = async (id) => {\n        deleteHandle('/index-categories',id)\n    };\n\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/index-category/add')\n    };\n\n\n    const columns = [\n        {\n            title: 'Title Uz',\n            dataIndex: 'title_uz',\n            id: 'title_uz',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Title Ru',\n            dataIndex: 'title_ru',\n            id: 'title_ru',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Image',\n            dataIndex: 'image',\n            id: 'image',\n            render: (image) => {\n                    return (\n                    <Image\n                        width={50}\n\n                        src={image}\n                    />\n                )\n            },\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record?.id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n                    <Popconfirm\n                        title={'Are you sure to delete this task?'}\n                        description={'Delete the task '}\n                        onConfirm={() => Delete(record.id)}>\n                        <Button type='danger' icon={<DeleteOutlined />}>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            {\n\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    rowKey={(record) => record?.id}\n                />\n            }\n        </div>\n    );\n};\n\nIndexCategoryTable.propTypes={\n    data:PropTypes.array,\n    deleteHandle:PropTypes.func\n}\n\nexport default IndexCategoryTable;","import IndexCategoryTable from './IndexCategoryTable';\nimport {Button, Col, Input, message, Row, Space, Spin} from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\nimport {useNavigate} from 'react-router-dom';\nimport apiService from '../../../@crema/services/apis/api';\nimport {useMutation, useQuery} from 'react-query';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport {useDispatch} from 'react-redux';\nimport React, {useEffect, useState} from \"react\";\n\nconst Index = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const {\n    mutate,\n    isSuccess,\n    isLoading: deleteNewsLoading,\n  } = useMutation(({url, id}) => apiService.deleteData(url, id));\n  const {\n    data,\n    isLoading: getCategoryLoading,refetch} = useQuery('index-category-get', () => apiService.getData('/index-categories/'), {\n    // enabled:false,\n    onError: (error) => {\n\n      message.error(error);\n      // Handle the error\n    },\n  });\n  const [search, setSearch] = useState([]);\n  const [isSearch, setIsSearch] = useState(false);\n  const deleteHandle = (url, id) => {\n    mutate({url, id});\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n    }\n  }, [isSuccess]);\n\n\n\n  const addArticle = () => {\n    dispatch({type: EDIT_DATA, payload: ''});\n    navigate('/index-category/add');\n  };\n\n  const serachProduct = (value) => {\n    if (value === '') {\n      setIsSearch(false);\n    } else {\n      setIsSearch(true);\n    }\n\n    const filterData = data?.filter(\n        (data) =>\n            data.title_ru.toLowerCase().includes(value.toLowerCase()) ||\n            data.title_uz.toLowerCase().includes(value.toLowerCase()),\n    );\n    setSearch(filterData);\n  };\n\n  return (\n      <div className={'site-space-compact-wrapper'}>\n        <Space direction={'vertical'} style={{width: '100%'}}>\n          <Row gutter={20}>\n            <Col span={16}>\n              <Input onChange={(e) => serachProduct(e.target.value)} />\n            </Col>\n            <Col span={8}>\n              <Button\n                  type='primary'\n                  icon={<PlusOutlined />}\n                  style={{width: '100%'}}\n                  onClick={addArticle}>\n                Add\n              </Button>\n            </Col>\n          </Row>\n          <Spin\n              size='medium'\n              spinning={getCategoryLoading|| deleteNewsLoading}>\n            <IndexCategoryTable\n                data={isSearch ? search : data}\n                deleteHandle={deleteHandle}\n            />\n          </Spin>\n        </Space>\n      </div>\n  );\n};\n\nexport default Index;"],"names":["_ref","data","deleteHandle","dispatch","useDispatch","navigate","useNavigate","columns","title","dataIndex","id","render","text","_jsx","children","image","Image","width","src","_","record","_jsxs","Space","size","Button","onClick","Edit","localStorage","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Popconfirm","description","onConfirm","async","Delete","DeleteOutlined","Table","dataSource","rowKey","Index","mutate","isSuccess","isLoading","deleteNewsLoading","useMutation","url","apiService","deleteData","getCategoryLoading","refetch","useQuery","getData","onError","error","message","search","setSearch","useState","isSearch","setIsSearch","useEffect","className","direction","style","Row","gutter","Col","span","Input","onChange","e","value","filterData","filter","title_ru","toLowerCase","includes","title_uz","serachProduct","target","PlusOutlined","addArticle","Spin","spinning","IndexCategoryTable"],"sourceRoot":""}