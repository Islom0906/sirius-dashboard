{"version":3,"file":"static/js/235.0daaecd3.chunk.js","mappings":"0RASA,MA2EA,EA3EqBA,IAA0B,IAAzB,KAACC,EAAI,aAACC,GAAaF,EACrC,MAAMG,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAkBVC,EAAU,CAEZ,CACIC,MAAO,QACPC,UAAW,SACXC,GAAI,SACJC,OAASC,IAAW,IAADC,EACf,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,MAAO,GACPC,IAAa,QAAVJ,EAAED,EAAM,UAAE,IAAAC,OAAA,EAARA,EAAUK,KACjB,GAGd,CACIV,MAAO,SACPE,GAAI,SACJC,OAAQA,CAACQ,EAAGC,KACRC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,KAAM,GAAGC,SAAA,EACZV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACHC,QAASA,KAAMC,OA9BrBjB,EA8B0BU,EAAOV,GA7B3CkB,aAAaC,QAAQ,aAAanB,GAClCP,EAAS,CAAC2B,KAAKC,EAAAA,GAAUC,QAAQtB,SACjCL,EAAS,eAHCK,KA8BqC,EAC/BoB,KAAK,UACLG,MAAMnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAY,IAAIV,SAAC,UAG5BV,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CACP3B,MAAO,oCACP4B,YAAa,mBACbC,UAAWA,IA7ChBC,WACXpC,EAAa,uBAAuBQ,EAAG,EA4CN6B,CAAOnB,EAAOV,IAAIc,UACnCV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACK,KAAK,SAASG,MAAMnB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAc,IAAIhB,SAAC,kBAUpE,OACIV,EAAAA,EAAAA,KAAA,OAAAU,UACIV,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACFlC,QAASA,EACTmC,WAAYzC,EACZ0C,OAASvB,GAAWA,EAAOV,MAE7B,E,4FChEd,MA2EA,EA3EckC,KACZ,MAAMvC,GAAWC,EAAAA,EAAAA,MACXH,GAAWC,EAAAA,EAAAA,OACX,OAACyC,EAAM,UAAEC,EAAWC,UAAWC,IAAuBC,EAAAA,EAAAA,cAAYjD,IAAA,IAAC,IACGkB,EAAG,GACHR,GACDV,EAAA,OAAKkD,EAAAA,EAAWC,WAAWjC,EAAKR,EAAG,KACxG,KAACT,EAAM8C,UAAWK,EAAgB,QAAEC,IAAWC,EAAAA,EAAAA,UAAS,cAAc,IACpEJ,EAAAA,EAAWK,QAAQ,cAAc,CAGnCC,QAAUC,IACR,IAAK,IAAIC,KAAOD,EAAME,SAAS1D,KAC7B2D,EAAAA,GAAQH,MAAM,GAADI,OAAIH,EAAG,MAAAG,OAAKJ,EAAME,SAAS1D,KAAKyD,GAAK,IACpD,KAKDI,EAAOC,IAAWC,EAAAA,EAAAA,UAAS,KAC3BC,EAASC,IAAaF,EAAAA,EAAAA,WAAS,IAQtCG,EAAAA,EAAAA,YAAU,KACJrB,GACFO,GACF,GACC,CAACP,IAoBJ,OACIhC,EAAAA,EAAAA,KAAA,OAAKsD,UAAW,6BAA6B5C,UAC3CH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC+C,UAAW,WAAYC,MAAO,CAACtD,MAAO,QAAQQ,SAAA,EACnDH,EAAAA,EAAAA,MAACkD,EAAAA,EAAG,CAACC,OAAQ,GAAGhD,SAAA,EACdV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,KAAM,GAAGlD,UACZV,EAAAA,EAAAA,KAAC6D,EAAAA,QAAK,CAACC,SAAWC,GAlBTC,KAEjBZ,EADU,KAARY,GAQJ,MAAMC,EAAe,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,QAAO/E,GAAMA,EAAKgF,QAAQC,cAAcC,SAASL,EAAMI,gBAAkBjF,EAAKmF,QAAQF,cAAcC,SAASL,EAAMI,iBAC1InB,EAAUgB,EAAW,EAQWM,CAAcR,EAAES,OAAOR,YAE/ChE,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,KAAM,EAAElD,UACXV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACK,KAAK,UAAUG,MAAMnB,EAAAA,EAAAA,KAACyE,EAAAA,EAAY,IAAIjB,MAAO,CAACtD,MAAO,QAASU,QA1B/D8D,KACjBrF,EAAS,CAAC2B,KAAMC,EAAAA,GAAWC,QAAS,KACpC3B,EAAS,cAAc,EAwB6EmB,SAAC,cAK/FV,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CAAClE,KAAK,SAASmE,SAAUtC,GAAoBJ,EAAoBxB,UACpEV,EAAAA,EAAAA,KAAC6E,EAAW,CAAC1F,KAAMgE,EAAWH,EAAS7D,EAAMC,aA5ClCA,CAACgB,EAAKR,KACzBmC,EAAO,CAAC3B,MAAKR,MAAI,UAgDT,C","sources":["pages/sample/Banner/BannerTable.jsx","pages/sample/Banner/index.jsx"],"sourcesContent":["import { Button,  Popconfirm, Space, Table,Image } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\n\n\n\nconst ProductTable = ({data,deleteHandle}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n    const Delete = async (id) => {\n        deleteHandle('/about/header-banner',id)\n    };\n\n\n\n\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/banner/add')\n    };\n\n\n\n\n\n    const columns = [\n\n        {\n            title: 'Image',\n            dataIndex: 'images',\n            id: 'images',\n            render: (image) => {\n                return (\n                    <Image\n                        width={50}\n                        src={image[0]?.url}\n                    />\n                )},\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record.id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n                    <Popconfirm\n                        title={'Are you sure to delete this task?'}\n                        description={'Delete the task '}\n                        onConfirm={() => Delete(record.id)}>\n                        <Button type='danger' icon={<DeleteOutlined />}>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            ),\n        },\n    ];\n\n\n    return (\n        <div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowKey={(record) => record.id}\n            />\n        </div>\n    );\n};\n\nProductTable.propTypes={\n    data:PropTypes.array,\n    deleteHandle:PropTypes.func\n}\n\nexport default ProductTable;","import React, {useEffect, useState} from 'react';\nimport BannerTable from \"./BannerTable\";\nimport {Button, Col, Input, message, Row, Space, Spin} from \"antd\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {useMutation, useQuery} from \"react-query\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst Index = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const {mutate, isSuccess, isLoading: deleteBannerLoading} = useMutation(({\n                                                                              url,\n                                                                              id\n                                                                            }) => apiService.deleteData(url, id))\n  const {data, isLoading: getBannerLoading, refetch} = useQuery('banner-get', () =>\n          apiService.getData('/banners/'), {\n        // enabled:false,\n\n        onError: (error) => {\n          for (let obj in error.response.data) {\n            message.error(`${obj}: ${error.response.data[obj][0]}`)\n          }\n        }\n      }\n  );\n\n  const [search,setSearch]=useState([])\n  const [isSearch,setIsSearch]=useState(false)\n\n  const deleteHandle = (url, id) => {\n    mutate({url, id})\n\n  }\n\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch()\n    }\n  }, [isSuccess])\n\n  const addArticle = () => {\n    dispatch({type: EDIT_DATA, payload: \"\"})\n    navigate('/banner/add')\n  }\n\n  const serachProduct=(value)=>{\n    if (value===\"\"){\n      setIsSearch(false)\n    }\n    else{\n      setIsSearch(true)\n    }\n\n\n    const filterData=data?.filter(data=>data.name_uz.toLowerCase().includes(value.toLowerCase()) || data.name_ru.toLowerCase().includes(value.toLowerCase()))\n    setSearch(filterData)\n  }\n\n  return (\n      <div className={'site-space-compact-wrapper'}>\n        <Space direction={'vertical'} style={{width: '100%'}}>\n          <Row gutter={20}>\n            <Col span={16}>\n              <Input onChange={(e)=>serachProduct(e.target.value)}/>\n            </Col>\n            <Col span={8}>\n              <Button type=\"primary\" icon={<PlusOutlined/>} style={{width: '100%'}} onClick={addArticle}>\n                Add\n              </Button>\n            </Col>\n          </Row>\n          <Spin size='medium' spinning={getBannerLoading || deleteBannerLoading}>\n            <BannerTable data={isSearch ? search : data} deleteHandle={deleteHandle}/>\n          </Spin>\n        </Space>\n\n\n      </div>\n  );\n};\n\nexport default Index;"],"names":["_ref","data","deleteHandle","dispatch","useDispatch","navigate","useNavigate","columns","title","dataIndex","id","render","image","_image$","_jsx","Image","width","src","url","_","record","_jsxs","Space","size","children","Button","onClick","Edit","localStorage","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Popconfirm","description","onConfirm","async","Delete","DeleteOutlined","Table","dataSource","rowKey","Index","mutate","isSuccess","isLoading","deleteBannerLoading","useMutation","apiService","deleteData","getBannerLoading","refetch","useQuery","getData","onError","error","obj","response","message","concat","search","setSearch","useState","isSearch","setIsSearch","useEffect","className","direction","style","Row","gutter","Col","span","Input","onChange","e","value","filterData","filter","name_uz","toLowerCase","includes","name_ru","serachProduct","target","PlusOutlined","addArticle","Spin","spinning","BannerTable"],"sourceRoot":""}