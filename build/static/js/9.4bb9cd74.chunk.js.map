{"version":3,"file":"static/js/9.4bb9cd74.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","pages/sample/Category/CategoryPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/rc-util/es/Dom/styleChecker.js"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, message, Row, Select, Typography, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport ImgCrop from \"antd-img-crop\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nconst {Title}=Typography\n\n\nconst initialValueForm = {\n    image: [],\n    title_uz: \"\",\n    title_ru: \"\",\n    is_index: null\n};\n\n\nconst CategoryPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n    // query-category-count-get\n    const {data: categoryCount, refetch: refetchCategoryCount} = useQuery(\n        'get-category-count',\n        () => apiService.getData('/categories-count/'), {\n            enabled: false\n        }\n    );\n\n    // query-category\n    const {\n        mutate: postCategoryMutate,\n        data: postCategory,\n        isLoading: postCategoryLoading,\n        isSuccess: postCategorySuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editCategoryLoading,\n        data: editCategoryData,\n        refetch: editCategoryRefetch,\n        isSuccess: editCategorySuccess,\n\n    } = useQuery([\"edit-category\", editId], () => apiService.getDataByID(\"/categories\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putCategory,\n        isLoading: putCategoryLoading,\n        data: putData,\n        isSuccess: putCategorySuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    //                                              =====useEffect====\n\n    // category success\n    useEffect(() => {\n        if (putCategorySuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postCategorySuccess || putCategorySuccess) {\n            navigate('/category')\n        }\n    }, [postCategory, putData])\n\n    // if edit category\n    useEffect(() => {\n        if (editId !== \"\") {\n            editCategoryRefetch();\n        }\n    }, [editId]);\n\n    // if no edit category\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n            refetchCategoryCount()\n    }, []);\n\n\n    //edit category\n    useEffect(() => {\n        const imageInitialMain = [{\n            uid: editCategoryData?.id,\n            name: editCategoryData?.id,\n            status: 'done',\n            url: editCategoryData?.image,\n        }];\n\n        if (editCategorySuccess) {\n\n            const edit = {\n                image: imageInitialMain,\n                title_uz: editCategoryData.title_uz,\n                title_ru: editCategoryData.title_ru,\n                is_index: editCategoryData.is_index,\n\n            }\n\n            setFileListProps(imageInitialMain);\n            form.setFieldsValue(edit)\n        }\n\n    }, [editCategoryData])\n    const onFinish = (values) => {\n\n        const formData = new FormData()\n\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_ru', values.title_ru);\n        formData.append('is_index', values.is_index);\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('image', fileListProps[0]?.originFileObj);\n        }\n\n\n        if (editCategorySuccess) {\n            putCategory({url: \"/categories\", data: formData, id: editId});\n        } else {\n            postCategoryMutate({url: \"/categories/\", data: formData});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    const onChangeMainImage = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    const optionsIsIndex = useMemo(() => {\n\n        if (categoryCount){\n        return [\n            {\n                value: true,\n                label: 'Показывать',\n                disabled:categoryCount?.count > 8\n            },\n            {\n                value: false,\n                label: 'Не показывай',\n            }\n        ]\n\n        }\n    }, [categoryCount]);\n    return (\n        <div>\n            {(postCategoryLoading || editCategoryLoading || putCategoryLoading) ? <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n\n\n                    <Row gutter={20}>\n\n\n\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'Sarlavha talab qilinadi'}\n                                label={'Sarlavha Uz'}\n                                name={'title_uz'}\n                            />\n\n\n                        </Col>\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'Необходимо ввести заголовок'}\n                                label={'Заголовок Ru'}\n                                name={'title_ru'}\n                            />\n\n                        </Col>\n                    </Row>\n\n\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Title level={5}>\n                                Количество просмотров на главной странице: {categoryCount && categoryCount?.count}\n                            </Title>\n                            <Form.Item\n                                label={`Сделайте так, чтобы он отображался в виде баннера на главной странице.`}\n                                name={'is_index'}\n                                rules={[{\n                                    required: true, message: 'Категория должны быть выбраны'\n                                }]}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну категория'\n                                    optionLabelProp='label'\n                                    options={optionsIsIndex}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n\n                            <Form.Item\n                                label='Изображение основной'\n                                name={'image'}\n                                rules={[{required: true, message: 'Изображение баннера должно быть загружено.'}]}>\n                                <ImgCrop>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListProps}\n                                        listType='picture-card'\n                                        onChange={onChangeMainImage}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {editCategorySuccess ? 'Edit' : 'Add'}\n                    </Button>\n                </Form>}\n        </div>);\n};\n\nexport default CategoryPostEdit;","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import canUseDom from \"./canUseDom\";\nvar isStyleNameSupport = function isStyleNameSupport(styleName) {\n  if (canUseDom() && window.document.documentElement) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n  return false;\n};\nvar isStyleValueSupport = function isStyleValueSupport(styleName, value) {\n  if (!isStyleNameSupport(styleName)) {\n    return false;\n  }\n  var ele = document.createElement('div');\n  var origin = ele.style[styleName];\n  ele.style[styleName] = value;\n  return ele.style[styleName] !== origin;\n};\nexport function isStyleSupport(styleName, styleValue) {\n  if (!Array.isArray(styleName) && styleValue !== undefined) {\n    return isStyleValueSupport(styleName, styleValue);\n  }\n  return isStyleNameSupport(styleName);\n}"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","Title","Typography","initialValueForm","image","title_uz","title_ru","is_index","CategoryPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","useState","data","categoryCount","refetch","refetchCategoryCount","useQuery","apiService","getData","enabled","mutate","postCategoryMutate","postCategory","isLoading","postCategoryLoading","isSuccess","postCategorySuccess","useMutation","url","postData","onSuccess","success","onError","error","obj","response","concat","editCategoryLoading","editCategoryData","editCategoryRefetch","editCategorySuccess","getDataByID","putCategory","putCategoryLoading","putData","putCategorySuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitialMain","uid","status","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","optionsIsIndex","useMemo","value","disabled","count","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps$","formData","FormData","_fileListProps$2","append","originFileObj","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","level","Select","width","placeholder","optionLabelProp","options","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","beforeUpload","length","Button","htmlType","marginTop","EditOutlined","props","ref","React","AntdIcon","_objectSpread","icon","EditOutlinedSvg","displayName","isStyleNameSupport","styleName","canUseDom","documentElement","styleNameList","Array","isArray","some","isStyleValueSupport","ele","createElement","origin","isStyleSupport","styleValue","undefined"],"sourceRoot":""}