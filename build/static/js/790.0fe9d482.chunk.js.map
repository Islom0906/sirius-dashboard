{"version":3,"file":"static/js/790.0fe9d482.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","pages/sample/Category/CategoryPostEdit.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, message, Row, Select, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport ImgCrop from \"antd-img-crop\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\n\n\nconst initialValueForm = {\n    image: [],\n    title_uz: \"\",\n    title_ru: \"\",\n    is_index: null\n};\n\n\nconst CategoryPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n    // query-category-get\n    const {data: categoryData, refetch: refetchCategory} = useQuery(\n        'get-category',\n        () => apiService.getData('/categories/'), {\n            enabled: false\n        }\n    );\n\n    // query-category\n    const {\n        mutate: postCategoryMutate,\n        data: postCategory,\n        isLoading: postCategoryLoading,\n        isSuccess: postCategorySuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editCategoryLoading,\n        data: editCategoryData,\n        refetch: editCategoryRefetch,\n        isSuccess: editCategorySuccess,\n\n    } = useQuery([\"edit-category\", editId], () => apiService.getDataByID(\"/categories\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putCategory,\n        isLoading: putCategoryLoading,\n        data: putData,\n        isSuccess: putCategorySuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    //                                              =====useEffect====\n\n    // category success\n    useEffect(() => {\n        if (putCategorySuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postCategorySuccess || putCategorySuccess) {\n            navigate('/category')\n        }\n    }, [postCategory, putData])\n\n    // if edit category\n    useEffect(() => {\n        if (editId !== \"\") {\n            editCategoryRefetch();\n        }\n    }, [editId]);\n\n    // if no edit category\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n            refetchCategory()\n        }\n    }, []);\n\n\n    //edit category\n    useEffect(() => {\n        const imageInitialMain = [{\n            uid: editCategoryData?.id,\n            name: editCategoryData?.id,\n            status: 'done',\n            url: editCategoryData?.image,\n        }];\n\n        if (editCategorySuccess) {\n\n            const edit = {\n                image: imageInitialMain,\n                title_uz: editCategoryData.title_uz,\n                title_ru: editCategoryData.title_ru,\n                is_index: editCategoryData.is_index,\n\n            }\n\n            setFileListProps(imageInitialMain);\n            form.setFieldsValue(edit)\n        }\n\n    }, [editCategoryData])\n    const onFinish = (values) => {\n\n        const formData = new FormData()\n\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_ru', values.title_ru);\n        formData.append('is_index', values.is_index);\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('image', fileListProps[0]?.originFileObj);\n        }\n\n\n        if (editCategorySuccess) {\n            putCategory({url: \"/categories\", data: formData, id: editId});\n        } else {\n            postCategoryMutate({url: \"/categories/\", data: formData});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    const onChangeMainImage = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    const optionsIsIndex = useMemo(() => {\n\n        if (categoryData){\n        return [\n            {\n                value: true,\n                label: 'Показывать',\n                disabled:categoryData[0]?.count > 8\n            },\n            {\n                value: false,\n                label: 'Не показывай',\n            }\n        ]\n\n        }\n    }, [categoryData]);\n    return (\n        <div>\n            {(postCategoryLoading || editCategoryLoading || putCategoryLoading) ? <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n\n\n                    <Row gutter={20}>\n\n\n\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'Sarlavha talab qilinadi'}\n                                label={'Sarlavha Uz'}\n                                name={'title_uz'}\n                            />\n\n\n                        </Col>\n                        <Col span={12}>\n                            <FormInput\n                                required={true}\n                                required_text={'Необходимо ввести заголовок'}\n                                label={'Заголовок Ru'}\n                                name={'title_ru'}\n                            />\n\n                        </Col>\n                    </Row>\n\n\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={`Сделайте так, чтобы он отображался в виде баннера на главной странице. Количество просмотров на главной странице: ${categoryData && categoryData[0]?.count}`}\n                                name={'is_index'}\n                                rules={[{\n                                    required: true, message: 'Категория должны быть выбраны'\n                                }]}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну категория'\n                                    optionLabelProp='label'\n                                    options={optionsIsIndex}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение основной'\n                                name={'image'}\n                                rules={[{required: true, message: 'Изображение баннера должно быть загружено.'}]}>\n                                <ImgCrop>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListProps}\n                                        listType='picture-card'\n                                        onChange={onChangeMainImage}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {editCategorySuccess ? 'Edit' : 'Add'}\n                    </Button>\n                </Form>}\n        </div>);\n};\n\nexport default CategoryPostEdit;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","initialValueForm","image","title_uz","title_ru","is_index","CategoryPostEdit","_categoryData$2","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","useState","data","categoryData","refetch","refetchCategory","useQuery","apiService","getData","enabled","mutate","postCategoryMutate","postCategory","isLoading","postCategoryLoading","isSuccess","postCategorySuccess","useMutation","url","postData","onSuccess","success","onError","error","obj","response","concat","editCategoryLoading","editCategoryData","editCategoryRefetch","editCategorySuccess","getDataByID","putCategory","putCategoryLoading","putData","putCategorySuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitialMain","uid","status","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","optionsIsIndex","useMemo","_categoryData$","value","disabled","count","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps$","formData","FormData","_fileListProps$2","append","originFileObj","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","Select","width","placeholder","optionLabelProp","options","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","beforeUpload","length","Button","htmlType","marginTop"],"sourceRoot":""}